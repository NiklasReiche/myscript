expression :=
    operation
    Id
    Number
    Boolean

Boolean :=
    true
    false

operation :=
    arithmetic_operator
    boolean_operator
    comparison_operator
    control_structure
    (let Id expression expression)
    (rec Id expression expression)
    (func Id* expression)
    (call Id expression*)
    (set Id expression)

arithmetic_operator :=
    (+ expression+)
    (- expression+)
    (* expression expression+)
    (/ expression expression+)

boolean_operator :=
    (& expression+)
    (| expression+)
    (! expression)

comparison_operator :=
    (= expression expression)
    (< expression expression)
    (> expression expression)

control_structure :=
    (if expression expression expression)
    (seq expression*)
